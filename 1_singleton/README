1. Singleton pattern의 정의

1) 싱글톤 패턴은 여러 디자인 패턴 종류 중 하나로, 하나의 클래스에 하나의 객체 인스턴스만 가지는 패턴이다.
2) 하나의 인스턴스를 만들어 놓고 해당 인스턴스를 다른 모듈들이 어디에서든 공유하며 접근하여 사용할 수 있다.
3) 싱글톤 패턴으로 만들어진 클래스는 생성자가 여러번 호출 되더라도, 실제로 생성되는 객체는 하나이고,
   최초 생성 이후에 호출된 생성자는, 최초에 생성했던 객체를 내보내는 방식으로 동작한다.
4) 주로 공통된 객체를 여러개 생성해서 사용하는 DBCP(Database Connection Pool) 같은 데이터베이스 연결 모듈과
   인터페이스 클래스 같이, 시스템에 의존하여 하나의 객체만 생성되어야 하는 연결 모듈들에 많이 사용된다.


2. Singleton Pattern의 장점

1) 인스턴스가 단 하나이기 때문에 인스턴스를 생성하는데 드는 시간과 자원 사용이 줄어든다.
2) static 을 사용하여 별도의 메모리 영역에 한번의 new 연산자로 인스턴스를 사용하기 때문에, 메모리 낭비를 방지한다.
3) 싱글톤 패턴의 클래스는 전역 인스턴스이기 때문에, 다른 인스턴스들이 공유할 수 있다.
4) 예를 들어 configuration 값의 경우, 하나의 객체로 공유하여 사용하는 것이 설계상 필요할 경우에 유용하게 사용한다.
   이 경우 여러개의 스레드에서 사용자 프로그램이 수행된다고 하더라도, 싱글톤 하나의 정의된 객체에 저장하여
   공용으로 사용할 수 있다.
